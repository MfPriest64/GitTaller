---
# tasks file for tomcat


# Incluir variables del archivo de variables
  - name: Incluir variables
    include_vars: /home/sysadmin/GitTaller/roles/tomcat/vars/main.yml

# Se descarga e instala tomcat 
  - name: Agregar directorio tomcat
    file: 
      path: /opt/tomcat
      state: directory

  - name: Agregar grupo tomcat
    group:
      name: tomcat
      state: present
    

  - name: Agregar usuario 'tomcat'
    user:
      name: tomcat
      comment: usuario tomcat
      group: tomcat
    

  - name: Descargar e instalar tomcat
    unarchive:
      src: "{{ tomcat_url }}"
      dest: /opt/tomcat
      remote_src: yes
 
  - name: Cambiar owner de directorio opt/tomcat usuario tomcat    
    file:
      path: /opt/tomcat
      owner: tomcat
      group: tomcat
      recurse: yes
            
  - name: Instalar servicio Tomcat para redhat
    template:
      src: tomcat_service_redhat
      dest: /etc/systemd/system/tomcat.service
    notify: Reiniciar servicio
    when: ansible_os_family in ['RedHat', 'Rocky']

  - name: Instalar servicio Tomcat para ubuntu
    template:
      src: tomcat_service_ubuntu
      dest: /etc/systemd/system/tomcat.service
    notify: Reiniciar servicio
    when: ansible_facts['os_family'] == "Debian"

  - name: Tomcat est√° habilitado e iniciado
    systemd:
      name: tomcat
      state: started
      enabled: yes
      daemon_reload: yes

  - name: Copiar archivo todo.war a servidores
    copy: src=todo.war  dest=/opt/tomcat/apache-tomcat-9.0.54/webapps/todo.war

  - name: Agregar directorio config
    file:
      path: /opt/config
      state: directory      

  - name: Copiar archivo app.properties a opt/config
    copy: src=app.properties  dest=/opt/config/app.properties      

  - name: Firewall activar puerto tomcat RedHat
    firewalld:
      permanent: yes
      port: "{{ item }}"
      state: enabled
    loop: "{{ port_redhat }}"
    when: ansible_os_family in ['RedHat', 'Rocky']

  - name: Firewall activar puerto tomcat Debian
    ufw:
      rule: allow
      port: "{{ item }}"
      proto: tcp
      state: enabled
    loop: "{{ port_debian }}"
    when: ansible_os_family == "Debian"


    #  - name: Mover aplicacion todo.war 
    # unarchive:
    #  src: todo.war
    #  dest: /opt/tomcat/apache-tomcat-9.0.54/webapps
    
    
